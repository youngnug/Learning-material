#Write an equation that uses multiplication, division, an exponent, addition, and subtraction that is equal to 100.25.
import math
x = 125
x = math.sqrt(x)-5+1/3*7
print(x)

#Answer these 3 questions without typing code. Then type code to check your answer.
#What is the value of the expression 4 * (6 + 5)
#What is the value of the expression 4 * 6 + 5 
#What is the value of the expression 4 + 6 * 5 
listq2 = [4*(6+5),4*6+5,4+6*5]
print(listq2)

#What is the type of the result of the expression 3 + 1.5 + 4?
numbs = 3+1.5+4
print(type(numbs))

#What would you use to find a numberâ€™s square root, as well as its square?
new_list = [math.sqrt(numbs),  numbs**2]
print(new_list)

# Print out 'e' using indexin
y = 'hello'
print(y[1])

# Reverse the string using slicing
print(y[::-1])

# Print out the 'o' Method 1:
print(y[-1])

# Method 2
print(y[4:])

# Build this list [0,0,0] two separate ways.
newlist = [0,0,0]
list = [0] + [0] + [0]
print(list)
print(newlist)

#Reassign 'hello' in this nested list to say 'goodbye' instead:
list3 = [1,2,[3,4,'hello']]
list3[2][2] = 'goodbye'
print(list3)

#Sort the list below:
list4 = [5,3,4,6,1]
list4.sort()
print(list4)

# Grab 'hello'
d = {'simplekey':'hello'}
print(d['simplekey'])

# Grab 'hello'
d = {'k1':{'k2':'hello'}}
print(d['k1']['k2'])

# Grab 'hello'
d = {'k1':[{'nest_key':['this is deep',['hello']]}]}
#this is a goddamn dictionary containing a list containing a dictionary containing a list containing a list....
var = d['k1'][0]['nest_key'][1][0]
print(var)

# Grab 'hello'
d = {'k1':[1,2,{'k2':['this is tricky',{'tough':[1,2,['hello']]}]}]}
#goodlord jesus
var1 = d['k1'][2]['k2'][1]['tough'][2][0]
print(var1)
#I'm a beast

#How do you create a tuple?
# - tuples are different than lists because they are immutable. You created them with parenthesis
#What is unique about a set?
# - sets are unique because they will only grab distinct values from a list, string, tuple etc (kinda like SELECT DISTINCT in SQL)

#Use a set to find the unique values of the list below:
list5 = [1,2,2,33,4,4,11,22,3,3,2]
new_set = set(list5)
print(new_set)

#For the following quiz questions, we will get a preview of comparison operators. In the table below, a=3 and b=4.
boollist = [2>3,3<=2, 3==2.0,3.0==3,4**0.5!=2]
#me being fancy. Indexing or just nomral print.
print(boollist[0:]) or print(boollist)

#Final Question: What is the boolean output of the cell block below?
l_one = [1,2,[3,4]]
l_two = [1,2,{'k1':4}]

# True or False?
print(l_one[2][0] >= l_two[2]['k1'])
#simplied, this is asking: 3>=4
